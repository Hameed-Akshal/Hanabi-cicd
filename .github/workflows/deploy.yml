name: TEST

on: [push]

jobs:
# build:
    # runs-on: ubuntu-latest

    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v2

    # - name: Set up Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: 3.8

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt

    # - name: Run Python application
    #   run: python app.py

      
 sast_scan:
   name: Run Bandit Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up Python
     uses: actions/setup-python@v2
     with:
       python-version: 3.8

   - name: Install Bandit
     run: pip install bandit

   - name: Run Bandit Scan
     run: bandit -ll -ii -r . -f json -o bandit-report.json -vv

   - name: Upload Artifact
     uses: actions/upload-artifact@v3
     if: always()
     with:
      name: bandit-findings
      path: bandit-report.json
 
 image_scan:
   name: Build Image and Run Image Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up Docker
     uses: docker-practice/actions-setup-docker@v1
     with:
      docker_version: '20.10.7'

   - name: Build Docker Image
     run: docker build -f Dockerfile -t hameedakshal/hanabi-py:$GITHUB_RUN_NUMBER .

   - name: Docker Scout Scan
     run: |
       curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
       script -q -e -c "bash install-scout.sh" /dev/null

       echo ${{secrets.REPO_PASSWORD}} | docker login -u ${{secrets.REPO_USER}} --password-stdin

       docker scout quickview
       
       docker scout cves

   - name: Push Docker Image
     run: |
      echo ${{secrets.REPO_PASSWORD}} | docker login -u ${{secrets.REPO_USER}} --password-stdin
      docker push  hameedakshal/hanabi-py:$GITHUB_RUN_NUMBER
     
   - name: Tag and Push Docker Image with built tag
     run: |
      echo ${{secrets.REPO_PASSWORD}} | docker login -u ${{secrets.REPO_USER}} --password-stdin
      docker tag  hameedakshal/hanabi-py:$GITHUB_RUN_NUMBER hameedakshal/hanabi-py:latest
      docker push hameedakshal/hanabi-py:latest

   # - name: Configure AWS CLI
   #   env:
   #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
   #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   #   run: |
   #    echo "[default]" >> ~/.aws/credentials
   #    echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
   #    echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
   - name: Install AWS CLI and Elastic Beanstalk CLI
     run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          sudo apt-get install -y python3-pip
          pip3 install awsebcli

   - name: Deploy to Elastic Beanstalk
     env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     run: |
      aws elasticbeanstalk update-environment \
            --application-name Hanabi \
            --environment-name  \
            --version-label $GITHUB_RUN_NUMBER
#      eb deploy Hanabi-env --region us-east-1

   
 
    
   


   
